(function (h) {
    h.fn.weatherfeed = function (m, f, s) {
        var f = h.extend({
            unit: "c",
            image: !0,
            country: !1,
            highlow: !0,
            wind: !0,
            humidity: !1,
            visibility: !1,
            sunrise: !1,
            sunset: !1,
            link: !0,
            showerror: !0,
            linktarget: "_self",
            woeid: !1
        }, f),
            o = "odd";
        return this.each(function (l, p) {
            var j = h(p);
            j.hasClass("weatherFeed") || j.addClass("weatherFeed");
            if (!h.isArray(m)) return !1;
            var k = m.length;
            10 < k && (k = 10);
            for (var i = "", l = 0; l < k; l++) "" != i && (i += ","), i += "'" + m[l] + "'";
            now = new Date;
            k = "http://query.yahooapis.com/v1/public/yql?q=" + encodeURIComponent("select * from weather.forecast where " + (f.woeid ? "woeid" : "location") + " in (" + i + ") and u='" + f.unit + "'") + "&rnd=" + now.getFullYear() + now.getMonth() + now.getDay() + now.getHours() + "&format=json&callback=?";
            h.ajax({
                type: "GET",
                url: k,
                dataType: "json",
                success: function (g) {
                    if (g.query) {
                        if (0 < g.query.results.channel.length) for (var c = g.query.results.channel.length, e = 0; e < c; e++) t(p, g.query.results.channel[e], f);
                        else t(p, g.query.results.channel, f);
                        h.isFunction(s) && s.call(this, j)
                    } else f.showerror && j.html("<p>Weather information unavailable</p>")
                },
                error: function () {
                    f.showerror && j.html("<p>Weather request failed</p>")
                }
            });
            var t = function (g, c, e) {
                var g = h(g),
                    a = c.wind.direction;
                348.75 <= a && 360 >= a && (a = "N");
                0 <= a && 11.25 > a && (a = "N");
                11.25 <= a && 33.75 > a && (a = "NNE");
                33.75 <= a && 56.25 > a && (a = "NE");
                56.25 <= a && 78.75 > a && (a = "ENE");
                78.75 <= a && 101.25 > a && (a = "E");
                101.25 <= a && 123.75 > a && (a = "ESE");
                123.75 <= a && 146.25 > a && (a = "SE");
                146.25 <= a && 168.75 > a && (a = "SSE");
                168.75 <= a && 191.25 > a && (a = "S");
                191.25 <= a && 213.75 > a && (a = "SSW");
                213.75 <= a && 236.25 > a && (a = "SW");
                236.25 <= a && 258.75 > a && (a = "WSW");
                258.75 <= a && 281.25 > a && (a = "W");
                281.25 <= a && 303.75 > a && (a = "WNW");
                303.75 <= a && 326.25 > a && (a = "NW");
                326.25 <= a && 348.75 > a && (a = "NNW");
                var f = c.item.forecast[0];
                wpd = c.item.pubDate;
                n = wpd.indexOf(":");
                tpb = q(wpd.substr(n - 2, 8));
                tsr = q(c.astronomy.sunrise);
                tss = q(c.astronomy.sunset);
                daynight = tpb > tsr && tpb < tss ? "day" : "night";
                var b = '<div class="weatherItem ' + o + " " + daynight + '"';
                e.image && (b += ' style="background-image: url(http://l.yimg.com/a/i/us/nws/weather/gr/' + c.item.condition.code + daynight.substring(0, 1) + '.png); background-repeat: no-repeat;"');
                b = b + ">" + ('<div class="weatherCity">' + c.location.city + "</div>");
                e.country && (b += '<div class="weatherCountry">' + c.location.country + "</div>");
                b += '<div class="weatherTemp">' + c.item.condition.temp + "&deg;</div>";
                b += '<div class="weatherDesc">' + c.item.condition.text + "</div>";
                e.highlow && (b += '<div class="weatherRange">High: ' + f.high + "&deg; Low: " + f.low + "&deg;</div>");
                e.wind && (b += '<div class="weatherWind">Wind: ' + a + " " + c.wind.speed + c.units.speed + "</div>");
                e.humidity && (b += '<div class="weatherHumidity">Humidity: ' + c.atmosphere.humidity + "</div>");
                e.visibility && (b += '<div class="weatherVisibility">Visibility: ' + c.atmosphere.visibility + "</div>");
                e.sunrise && (b += '<div class="weatherSunrise">Sunrise: ' + c.astronomy.sunrise + "</div>");
                e.sunset && (b += '<div class="weatherSunset">Sunset: ' + c.astronomy.sunset + "</div>");
                e.link && (b += '<div class="weatherLink"><a href="' + c.link + '" target="' + e.linktarget + '" title="Read full forecast">Full forecast</a></div>');
                o = "odd" == o ? "even" : "odd";
                g.append(b + "</div>")
            }, q = function (f) {
                d = new Date;
                return r = new Date(d.toDateString() + " " + f)
            }
        })
    }
})(jQuery);